from src.pieces.pawn import Pawn
from src.pieces.rook import Rook
from pieces.king import King
from pieces.queen import Queen
from pieces.bishop import Bishop
from pieces.knight import Knight

BASE_PIECES = {
	(6, 0, "w"): Pawn, (7, 0, "w"): Rook,
	(6, 1, "w"): Pawn, (7, 1, "w"): Knight,
	(6, 2, "w"): Pawn, (7, 2, "w"): Bishop,
	(6, 3, "w"): Pawn, (7, 3, "w"): Queen,
	(6, 4, "w"): Pawn, (7, 4, "w"): King,
	(6, 5, "w"): Pawn, (7, 5, "w"): Bishop,
	(6, 6, "w"): Pawn, (7, 6, "w"): Knight,
	(6, 7, "w"): Pawn, (7, 7, "w"): Rook,
	
	(1, 0, "b"): Pawn, (0, 0, "b"): Rook,
	(1, 1, "b"): Pawn, (0, 1, "b"): Knight,
	(1, 2, "b"): Pawn, (0, 2, "b"): Bishop,
	(1, 3, "b"): Pawn, (0, 3, "b"): Queen,
	(1, 4, "b"): Pawn, (0, 4, "b"): King,
	(1, 5, "b"): Pawn, (0, 5, "b"): Bishop,
	(1, 6, "b"): Pawn, (0, 6, "b"): Knight,
	(1, 7, "b"): Pawn, (0, 7, "b"): Rook
}

# SCALING AND FPS
FULL_SCREEN = 0
SCALE = 1
FPS = 10

# DISPLAY INFORMATION
NATIVE_WIDTH = 360
NATIVE_HEIGHT = 360
NATIVE_SIZE = (NATIVE_WIDTH, NATIVE_HEIGHT)
NATIVE_WIDTH_CENTER = NATIVE_WIDTH // 2
NATIVE_HEIGHT_CENTER = NATIVE_HEIGHT // 2
NATIVE_CENTER = (NATIVE_WIDTH_CENTER, NATIVE_HEIGHT_CENTER)
NATIVE_TOP = 0
NATIVE_BOTTOM = NATIVE_HEIGHT
NATIVE_RIGHT = NATIVE_WIDTH
NATIVE_LEFT = 0
NATIVE_TOP_LEFT = (NATIVE_LEFT, NATIVE_TOP)
NATIVE_TOP_CENTER = (NATIVE_WIDTH_CENTER, NATIVE_TOP)
NATIVE_TOP_RIGHT = (NATIVE_WIDTH, NATIVE_TOP)
NATIVE_RIGHT_CENTER = (NATIVE_WIDTH, NATIVE_HEIGHT_CENTER)
NATIVE_BOTTOM_RIGHT = NATIVE_SIZE
NATIVE_BOTTOM_CENTER = (NATIVE_WIDTH_CENTER, NATIVE_HEIGHT)
NATIVE_BOTTOM_LIFT = (NATIVE_LEFT, NATIVE_HEIGHT)
NATIVE_LEFT_CENTER = (NATIVE_LEFT, NATIVE_HEIGHT_CENTER)

DISPLAY_WIDTH = int(NATIVE_WIDTH * SCALE)
DISPLAY_HEIGHT = int(NATIVE_HEIGHT * SCALE)
DISPLAY_SIZE = (DISPLAY_WIDTH, DISPLAY_HEIGHT)
DISPLAY_WIDTH_CENTER = DISPLAY_WIDTH // 2
DISPLAY_HEIGHT_CENTER = DISPLAY_HEIGHT // 2
DISPLAY_CENTER = (DISPLAY_WIDTH_CENTER, DISPLAY_HEIGHT_CENTER)
DISPLAY_TOP = 0
DISPLAY_BOTTOM = DISPLAY_HEIGHT
DISPLAY_RIGHT = DISPLAY_WIDTH
DISPLAY_LEFT = 0
DISPLAY_TOP_LEFT = (DISPLAY_LEFT, DISPLAY_TOP)
DISPLAY_TOP_CENTER = (DISPLAY_WIDTH_CENTER, DISPLAY_TOP)
DISPLAY_TOP_RIGHT = (DISPLAY_WIDTH, DISPLAY_TOP)
DISPLAY_RIGHT_CENTER = (DISPLAY_WIDTH, DISPLAY_HEIGHT_CENTER)
DISPLAY_BOTTOM_RIGHT = DISPLAY_SIZE
DISPLAY_BOTTOM_CENTER = (DISPLAY_WIDTH_CENTER, DISPLAY_HEIGHT)
DISPLAY_BOTTOM_LIFT = (DISPLAY_LEFT, DISPLAY_HEIGHT)
DISPLAY_LEFT_CENTER = (DISPLAY_LEFT, DISPLAY_HEIGHT_CENTER)

# BOARD
BOARD_W = 8
BOARD_H = 8
CELL_W = DISPLAY_WIDTH // BOARD_W
CELL_H = DISPLAY_HEIGHT // BOARD_H
CELL_SIZE = (CELL_W, CELL_H)
BOARD_SIZE = (BOARD_W, BOARD_H)

BOARD_TOP_RIGHT = (
	DISPLAY_WIDTH_CENTER - int(BOARD_W / 2 * CELL_W),
	DISPLAY_HEIGHT_CENTER - int(BOARD_H / 2 * CELL_H)
)


def notation_to_index(row, col):
	return row * 8 + col


TEST_PIECES: (int, int, str) = {
	(3, 5, "w"): Rook,
	(3, 4, "w"): Bishop
	
}
